{"pages":[],"posts":[{"title":"CUDA","text":"CUDA编程 环境搭建 第一个程序hello world GPU计算 CPU内部的并行 指令级并行 ILP 数据级并行 DLP 线程级并行 TLP 同步多线程 多核 锁、一致性、同一性 结论 GPU计算框架 基础概念 粒度、加速比 并行编程模型 具体实例 Amdahl’s Law SM grid、block、warp、thread CUDA编程环境搭建 需要一台具有英伟达显卡的电脑 根据系统下载CUDA Toolkit，进行安装 下载完成后，在cmd或git bash中输入nvcc -V，下载成功会显示版本 在vscode中添加cuda扩展 Nsight Visual Studio Code Edition 安装MSVC编译器，MSVC内置在VS中，所以先安装VS中的一些组件，若果只需要MSVC的话，工作负荷一个也不用勾选。在单个组件里搜索MSVC和Windows 10 SDK. 配置MSVC环境变量，一般都在下载的VS子目录下的VC\\Tools\\MSVC\\14.36.32532\\bin\\Hostx64\\x64，将目录添加到环境变量中 记住共享组件，工具和SDK的目录，MSVC编译器就在此目录下 下载完成后，在Developer Command Prompt中输入code打开VScode,注意你需要一下扩展. 接下来按住Ctrl + shift + P，选择编辑C/C++的配置文件 第一个程序hello world 在vscode中新建hello_gpu.cu文件，注意后缀名。 CPU代码 123456789101112#include&lt;stdio.h&gt;void cpu(){ printf(&quot;hello cpu\\n&quot;);}void gpu(){ printf(&quot;hello gpu\\n&quot;);}int main(){ cpu(); gpu();} 将函数添加前缀__global__ void cpu(),标识它是一个CUDA程序 123456789101112131415161718192021222324#include&lt;stdio.h&gt;void cpu(){ printf(&quot;hello cpu\\n&quot;);}__global__ void gpu(){ printf(&quot;hello gpu\\n&quot;);}int main(){ cpu(); gpu&lt;&lt;&lt;1,1&gt;&gt;&gt;(); cudaDeviceSynchronize();//同步操作}/*__global__关键字表明以下函数将在GPU上运行并可以全局调用，而在这种情况下，则指由CPU或GPU调用。通常我们在CPU上执行的代码称为主机代码，而将在GPU上运行的代码成为设备代码。注意返回类型只能为void，使用__global__关键字定义的函数需要返回void类型*//*gpu&lt;&lt;&lt;线程块个数，线程个数&gt;&gt;&gt;通常，当调用GPU上运行的函数时，我们将此种函数称为已启动的核函数。通常启动核函数时，我们必须提供执行配置，即在向核函数传递任何预期参数之前使用&lt;&lt;&lt;&gt;&gt;&gt;语法完成配置.从宏观层面，程序员可通过执行配置为核函数启动指定线程层次结构，从而定义线程组(称为线程块)的数量，以及要在每个线程块中执行的线程数量。本程序只在使用包含1线程(第二个配置参数)的1线程块(第一个执行配置参数)启动核函数cudaDeviceSynchronize();核函数启动方式为异步：CPU代码将继续执行而无需等待核函数完成启动。调用CUDA运行时提供的函数cudaDeviceSynchronize将导致主机(CPU)代码暂作等待，直至设备(GPU)代码执行完成，才能在CPU上恢复执行*/ 编译程序指令 nvcc -arch=sm_70 -o hello-gpu hello-gpu.cu -run -arch=sm_70 代表gpu的架构 查看自己电脑的显卡型号，我所使用的为1050ti为Pascal架构，在官方文档查看该架构所使用的命令所以我所使用的指令为 nvcc -arch=sm_60 -o hello-gpu hello-gpu.cu -run 报错：无法将“nvcc”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。[^1]报错：出现 Cannot find compiler ‘cl.exe’ in PATH[^2][^1]:重启电脑，打开命令行终端后，打开vscode进行编译。更多解决办法参考[^2]:直接安装vs编译器，然后将文件中cl.exe添加到系统环境变量中。或者从VScode中配置msvc，配置参考视频 GPU计算CPU内部的并行指令级并行 ILP 超标量 乱序执行 数据级并行 DLP数据级并行单指令多数据 SIMD。执行单元 ALU 很宽，寄存器也很宽. 1234567for(int i = 0; i &lt; N; i += 4){ //in parallel 并行同时计算 A[i] = B[i] + C[i]; A[i + 1] = B[i + 1] + C[i + 1]; A[i + 2] = B[i + 2] + C[i + 2]; A[i + 3] = B[i + 3] + C[i + 3];} 线程级并行 TLP同步多线程 线程组成 指令流 私有的寄存器，程序计数器，栈Private PC,registers,stack 程序员可以进行创建和销毁 程序员或者OS都可以调度 多核 将流水线完整复制 Sandy Bridge-E：6 cores 完整的核 继续保持摩尔定理 多核程序和利用率问题 锁、一致性、同一性谁的数据是正确的：缓存一致性协议什么样的数据是正确的：存储器的同一性原理 结论CPU为串行程序优化缓慢的内存带宽新的方向：并行处理 GPU计算框架基础概念 向量运算 Vectors Motivation 12for(int i = 0; i &lt; N; i++)A[i] = B[i] + C[i]; 粒度、加速比并行编程模型共享存储模型线程模型消息传递模型数据并行模型 具体实例OpenMPMPISingle Program Multiple Data(SPMD)Multiple Program Multiple Data(MPMD) Amdahl’s Law程序的加速比取决于可以被并行化的部分$$speedup = 1/(1-p)$$p 是可并行化的部分，如果全部都可以并行化，p = 1 and the speedup is infinite如果有N个处理器并行处理$$speedup = 1 SMCUDA编程中称核为SM，称ALU为CUDA核，称程序片元为CUDA线程 grid、block、warp、thread软件层级上的概念","link":"/2023/05/21/CUDA%E7%BC%96%E7%A8%8B/"},{"title":"博客搭建","text":"一.HEXO hexo主题更换 在hexo中找到喜欢的主题，比如我使用的是Anatolo,网址git克隆安装到本地安装依赖配置复制_config.example.yml为_config.yml修改hexo根目录下的_config.yml,theme: Anatolo 生成本地网页hexo s 遇到问题 4000端口号被占用 解决方法 hexo s -p 5000或者其他端口号 登录127.0.0.1:端口号查看 生成网页hexo clhexo ghexo d github上的仓库会变动，如果使用了域名解析，记得在Setting中修改page中的域名 打开网页","link":"/2023/04/20/newpapername/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2023/04/20/hello-world/"},{"title":"Markdown","text":"#代表一级标题,##代表二级标题，###代表三级标题 有序无序列表 代码 数学公式 表格 脚注 链接 图片 字体 #代表一级标题,##代表二级标题，###代表三级标题 代表引用 有序无序列表 a b c 文本1 文本2 文本3 *可以代替- [ ] 代表勾选 代码 代码块 123int main(){ return 0;} 行内代码printf() 数学公式 行内式和行外式$x=1$$$x = 1$$ 上下标$$x^2 + y_1 = x^{x_1 + y}$$ 括号大括号需要转义$$f(x,y) = x^2+y_2, x\\epsilon[1,10],y\\epsilon{1,2,3}$$ 表格|姓名|班级|年龄|成绩||:–|–:|–|:–|–:||张三|2|18|90||:—| 表示左对齐|—:| 表示右对齐|:—:| 表示居中对齐 脚注脚注链接[^1][^1]: Hi this is a football! 链接 百度 https://www.baidu.com 文章跳转链接 请参考链接 图片 引用网络上的图片 引用本地图片 文档放在markdown文件中 字体 斜体 加粗 下划线 $y = 0$ ==高亮文字== 太阳，它每时每刻都是夕阳也都是旭日。当它熄灭着走下山去收尽苍凉残照之际，正是它在另一面燃烧着爬上山巅布散烈烈朝辉之时。 –史铁生","link":"/2023/04/20/Markdown/"},{"title":"计算机辅助药物设计","text":"药物设计基本概念和理论基础 药物的化学结构和特性 基础知识 基本原理、技术、方法 受体理论(靶点) 药物-受体作用方式 药物的发现途径与过程 经典药物发现的过程 现代药物的发现过程 药物发现的途径 — 非合理药物设计 药物发现的途径 — 合理药物设计 靶点学说 基于结构的药物设计(SBDD) 基于性质的药物设计(PBDD成药性设计):靶点暴露(药代/药动要求):类药性，结构/性质的关系 基于片段的药物设计(FBDD) 先导化合物的优化和成药性研究 药物作用的生物化学基础 药物作用的分子药理学基础 药物的化学结构与生物活性的关系(SAR) 定量构效关系(QSAR) 3维定量构效关系研究(3D-QSAR) 分子三维结构的理论计算方法 新药发现中的化学信息学和生物信息学 药物研究中的信息处理 化学小分子的处理 分子相似性搜索 合成反应信息处理和计算机辅助有机合成设计 生物大分子的信息处理 与新药研发有关的数据库 信息计算新技术 药物设计基本概念和理论基础药物的化学结构和特性基础知识 ==计算机辅助药物设计(CADD)==:应用各种理论技术方法和分子模拟技术将SBDD的思路以计算机的方法加以实现，是多学科有机结合和综合运用。 ==类药性==:大部分药物分子具有中等分子量，合适的分子形状和分子柔性…特性。(药物所共同具有的分子结构特征和理化性质)理化性质一般指药物的溶解度、熔点之类的。 ==成药性==:一个合格的药物应该具有…性质(容易代谢出体外，无毒及不良反应等) ==优势结构==:某些高频出现在药物结构片段。 ==键能==:键长越短，键能越高，分子越稳定。 以下例子中阿司匹林等药物化学结构式阿司匹林显酸性，可以发生水解反应更容易代谢出体外(药物代谢的四个途径包括氧化、还原、水解、结合) 基本原理、技术、方法受体理论(靶点) 靶点:药物发挥药效，须于机体内具有特定的功能的生物大分子结合(==药物与机体内生物大分子的结合部位==)。 一种有效的药物应符合以下两项要求(靶点与药物之间的关系):(1) 作用于靶点(与机体内的某一种或者多种靶点发生相互作用)==(药效学要求)==。靶点虽然是衔接药物与疾病之间的桥梁，但并不是药物研究的必要条件。比如先发现的药物，后来发现药物靶点(阿司匹林)。(2) 暴露于靶点(药物达到靶点、达到适宜的浓度$C_{max}$)==(药物动力学要求)==。简言之就是对于药物的吸收情况。(3) 减少脱靶效应(与产生治疗效果的靶点结合称为中靶，与产生治疗效果无关的靶点结合称为脱靶)。其中脱靶有无关的其他靶点和其他组织的无关靶点。(4)例子 作用于靶点例子:当细胞损伤，细胞释放$磷脂酶A_2$，……网络通路流程。阿司匹林具有解热镇痛抗炎作用。==环氧化酶就是阿司匹林的药物靶点，作用机制就是阻断环氧合酶COX的活性。==产生前列腺素PGH2合成通路 暴露与靶点例子:研制药和仿制药结构相同，但是药效有所不同。血药浓度即药物的吸收情况不同。 脱靶效应例子:阿司匹林副作用，对胃不好容易便秘等。 药物靶点的分类 受体、酶、离子通道、细胞因子、核酸、脂质、糖蛋白… 选择靶点的要求(1)靶点在疾病产生的信号通路上起到关键性的作用，比如阿司匹林中的COX靶点。(2)药物调控所产生的获益要超过它的风险。 使药物像导弹，具有准确目标，不会伤及其他正常细胞。靶点理论已经成为现代药物发现理论的前提和基础，以靶点假设作为药物设计与发现起点的思想。5. 其他有关 外源性药物可以作用于受体而干预生理生化作用;内源性药物调节物与受体的相互作用。 受体激动剂:启动了受体生物学功能，如一些内源性物质(促进受体功能)。 受体拮抗剂:药物与受体结合后阻碍了内源性物质与受体结合，而导致生物作用的抑制(抑制受体功能)。 药物-受体作用方式 锁钥原理，互补性配体受体满足空间形状、相互作用力契合(配体受体几何形状的互补、化学性质的互补) 诱导契合理论但并不像钥匙和锁一样是刚性的，他们会相互契合，互相适应对方。配体构象变化、受体构象变化与锁钥模型之间的区别就是刚性柔性区别 分子识别:分子间发生专一的相互作用，通过分子间相互作用力而结合 药物通过分子间作用力(==可逆==)与靶点相结合，某些药物可形成共价键(==不可逆==)三种主要的分子力:==静电作用、氢键相互作用、疏水作用==键合类型: 离子键 疏水键(两个不溶于水的分子间的相互作用) 氢键(重要的生物大分子-药物作用方式) 范德华力(相邻电中性原子之间存在微弱的吸引力) 螯合作用 电荷转移(从一个分子轨道转移到另一个分子轨道) 偶极-偶极作用 卤键 阳离子-$\\pi$ 共价键(键能高，结合牢，不可逆) 结合动力学$K_{on}/K_{off}$小分子相似性:相似的化学结构具有相近或者相关的活性经典药物化学的基石:生物电子等排、药效团、肽拟似物、过渡态类似物、酶自杀性底物、优势结构… 药物的发现途径与过程经典药物发现的过程==先导化合物的发现和优化==是药物设计最关注的问题和研究重点。先导化合物是具有一定生物活性的新的结构类型==化学结构==经典新药研究基本流程 现代药物的发现过程利用纯化蛋白(靶点)对化合物进行亲和力筛选;筛选出的化合物通过体外功能测试确立;通过疾病动物模型评估药物作用;项目的起点通常为假设疾病靶点，区别于经典药物发现的先导化合物的确定 药物发现的途径 — 非合理药物设计 药物的偶然发现与随机筛选随机筛选、定向筛选 筛选模型可以是整体水平、组织器官水平、细胞水平甚至水分子水平，它主要分为体内和体外两大类，体内模拟采用实验动物病理模型实验，一般用于新药开发，体外模型一般用于新药发现。 高通量筛选 运用筛选模型对大量化合物进行生物活性测定高内涵筛选表型筛选2. 天然有效成分3. 已有药物，药物合成的中间体4. 组成化学方法以群集筛选(库筛选)的方法进行筛选，发展成为超高通量筛选缺少活性分子信息，在库中进行筛选目的是为了找到活性分子，属于随机筛选，当筛选有效结构的化学类似物时，属于定向筛选 药物发现的途径 — 合理药物设计合理药物设计是基于结构的药物设计、基于性质的药物设计和基于机理的药物设计的综合 靶点学说基于结构的药物设计(SBDD) 基本思想:是根据配体，与生物体内的靶点相互作用产生生物活性，从而治疗靶点相关的疾病。==简单说就是药物与靶点结合治疗疾病==，例子阿司匹林。 基本原理:基于受体与配体的==锁钥原理==，即配体像一把钥匙，受体的活性位点是那锁。 分类 基于受体结构的药物设计，为直接设计方法。(知道活性位点，来制作药物)。 基于配体结构的药物设计，间接设计方法。主要包括两个内容，第一种是研究系列药物的定量构效关系，第二种方法是构建共同作用于同一靶点的药效团模型 基于性质的药物设计(PBDD成药性设计):靶点暴露(药代/药动要求):类药性，结构/性质的关系基于片段的药物设计(FBDD)白色位置是受体的活性位点，黑色正方形是小的片段，对这个受体具有微弱的活性，但它的分子量很小，在它的活性位点上生长不同活性片段，构建出药物分子选择合适的靶点，根据靶点构建一个片段库(库容量、化学结构的多样性、类药性)，将这个这个片段库，针对靶点进行片段筛选 先导化合物发现中出现==假阳性问题==PAINS==筛选到的先导化合物中大约5-12%属于非特异性分子。这些分子有不同的类型，有的只具有化学活性，但并没有生物学活性== 先导化合物的优化和成药性研究先导化合物药效弱，副作用大等毛病，导致不能直接药用，类似水杨酸；有毒，而且对肠胃有副作用，该药物一般外用。因此需要对先导化合物的结构进行改造和修饰。通过合理设计或随机筛选得到的化合物分子称为==命中物== 药物作用的生物化学基础结构生物学:从研究生物大分子出发,比如从蛋白质入手，结构生物学为基于结构药物设计奠定了基础。化学生物学:以化学小分子来入手，明确信号传导通路蛋白质功能，发现有关标记及靶点，加深了研究范围和深度。 蛋白质天然蛋白质又20种标准氨基酸构成 核酸其基本结构单元是核苷酸，核苷酸由碱基、戊糖和磷酸三部分构成 酶 具有催化作用的蛋白质 糖类有机分子 生物膜 生物体基本结构之一，主要有磷脂和蛋白质构成 药物作用的分子药理学基础药物的化学结构与生物活性的关系(SAR)定量构效关系(QSAR)3维定量构效关系研究(3D-QSAR)分子三维结构的理论计算方法理论计算方法(量子化学,分子力学) 新药发现中的化学信息学和生物信息学药物研究中的信息处理化学小分子的处理分子相似性搜索合成反应信息处理和计算机辅助有机合成设计生物大分子的信息处理与新药研发有关的数据库信息计算新技术 主要参考了复旦大学药物设计学课程、计算机辅助药物设计导论第二版","link":"/2023/06/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BE%85%E5%8A%A9%E8%8D%AF%E7%89%A9%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"⾃⼰的理解总结概括，不要抄","slug":"⾃⼰的理解总结概括，不要抄","link":"/tags/%E2%BE%83%E2%BC%B0%E7%9A%84%E7%90%86%E8%A7%A3%E6%80%BB%E7%BB%93%E6%A6%82%E6%8B%AC%EF%BC%8C%E4%B8%8D%E8%A6%81%E6%8A%84/"}],"categories":[]}